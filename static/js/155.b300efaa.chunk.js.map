{"version":3,"file":"static/js/155.b300efaa.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,wCAA2CC,IAD7D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBN,EAAAA,EAAAA,IAAA,kCACMC,EADN,kBACuBK,IAFzC,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBR,EAAAA,EAAAA,IAAA,mBAAsBQ,EAAtB,oBAAoCP,IADtD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACkBR,EAAAA,EAAAA,IAAA,mBAAsBQ,EAAtB,4BAA4CP,IAD9D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,uFACkBR,EAAAA,EAAAA,IAAA,mBAAsBQ,EAAtB,4BAA4CP,IAD9D,cACCE,EADD,yBAEEA,EAASC,MAFX,kE,kLCxBMO,EAAYC,EAAAA,GAAAA,IAAH,0EAMTC,EAAQD,EAAAA,GAAAA,GAAH,gDAILE,EAAWF,EAAAA,GAAAA,IAAH,6CAGRG,EAASH,EAAAA,GAAAA,IAAH,6CAINI,EAAiBJ,EAAAA,GAAAA,GAAH,+CAIdK,EAAqBL,EAAAA,GAAAA,IAAH,8CAGlBM,EAAON,EAAAA,GAAAA,GAAH,wDAKJO,EAAWP,EAAAA,GAAAA,GAAH,6GAQRQ,GAAOR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,wd,SC8CjB,EAnEc,WACZ,IAAQU,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OAlBAC,QAAQC,IAAIN,IAEZO,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA6BP,GAA7B,0FACwBf,EAAAA,EAAAA,IAAee,GADvC,OACQQ,EADR,OAEQC,EAAc,CAClBC,MAAOF,EAAQG,eACfC,IAAKJ,EAAQK,YACbC,KAAMN,EAAQO,aAAaC,MAAM,EAAG,GACpCC,MAAOC,KAAKC,MAA6B,GAAvBX,EAAQY,cAC1BC,OAAQb,EAAQa,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrDC,SAAUlB,EAAQkB,UAEpBtB,EAASK,GAVX,2CADc,yBAAC,SAAD,2BAadkB,CAAc3B,EACf,GAAE,CAACA,KAGF,iCACE,UAACX,EAAD,YACE,gBACEuB,IACET,EAAMS,IAAN,0CACuCT,EAAMS,KA7BvD,iKAgCQgB,IAAKzB,EAAMO,SAEb,4BACE,4BACE,UAACnB,EAAD,WACGY,EAAMO,MADT,KACkBP,EAAMW,KADxB,QAGA,wCAAgBX,EAAMc,MAAtB,WAEF,UAACzB,EAAD,YACE,SAACE,EAAD,yBACA,uBAAIS,EAAMuB,eAEZ,UAACjC,EAAD,YACE,SAACC,EAAD,uBACA,uBAAIS,EAAMkB,mBAIhB,UAAC1B,EAAD,YACE,SAACJ,EAAD,sCACA,UAACK,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAM+B,GAAG,OAAT,qBAEF,SAAChC,EAAD,WACE,SAACC,EAAD,CAAM+B,GAAG,UAAT,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C","sources":["API.js","pages/Movie/Movie.styled.jsx","pages/Movie/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '9b8f0c4ec164e6dabb7e1c13a0a2a1d6';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`/3/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieCard = styled.div`\n  height: 350px;\n  display: flex;\n  gap: 16px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 16px;\n`;\n\nexport const Overview = styled.div`\n  margin-top: 20px;\n`;\nexport const Genres = styled.div`\n  margin-top: 20px;\n`;\n\nexport const SecondaryTitle = styled.h3`\n  margin-bottom: 8px;\n`;\n\nexport const AdditionalInfoCard = styled.div`\n  padding-top: 20px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const ListItem = styled.li`\n  list-style: none;\n  width: 100px;\n  &:first-child {\n    margin-left: 8px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 16px;\n  color: black;\n  display: block;\n  padding: 8px 20px;\n  border: 1px solid black;\n  border-radius: 5px;\n  &:hover {\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14),\n      0px 2px 1px rgba(0, 0, 0, 0.2);\n    color: ornage;\n  }\n  &.active {\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14),\n      0px 2px 1px rgba(0, 0, 0, 0.2);\n    color: orange;\n  }\n`;\n","import { useParams, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieById } from 'API';\n\nimport {\n  MovieCard,\n  Title,\n  Overview,\n  Genres,\n  SecondaryTitle,\n  AdditionalInfoCard,\n  Link,\n  ListItem,\n  List,\n} from './Movie.styled';\n\nconst defaultImage =\n  'https://images.unsplash.com/photo-1594322436404-5a0526db4d13?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1129&q=80';\n\nconst Movie = () => {\n  const { movieID } = useParams();\n  const [movie, setMovie] = useState({});\n  console.log(movieID);\n\n  useEffect(() => {\n    async function findMovieById(movieID) {\n      const results = await fetchMovieById(movieID);\n      const movieToSave = {\n        title: results.original_title,\n        src: results.poster_path,\n        year: results.release_date.slice(0, 4),\n        score: Math.round(results.vote_average * 10),\n        genres: results.genres.map(genre => genre.name).join(', '),\n        overview: results.overview,\n      };\n      setMovie(movieToSave);\n    }\n    findMovieById(movieID);\n  }, [movieID]);\n\n  return (\n    <>\n      <MovieCard>\n        <img\n          src={\n            movie.src\n              ? `https://image.tmdb.org/t/p/w500/${movie.src}`\n              : defaultImage\n          }\n          alt={movie.title}\n        />\n        <div>\n          <div>\n            <Title>\n              {movie.title} ({movie.year})\n            </Title>\n            <p>User score: {movie.score}%</p>\n          </div>\n          <Overview>\n            <SecondaryTitle>Overview:</SecondaryTitle>\n            <p>{movie.overview}</p>\n          </Overview>\n          <Genres>\n            <SecondaryTitle>Genres:</SecondaryTitle>\n            <p>{movie.genres}</p>\n          </Genres>\n        </div>\n      </MovieCard>\n      <AdditionalInfoCard>\n        <Title>Additional information</Title>\n        <List>\n          <ListItem>\n            <Link to=\"cast\">Cast</Link>\n          </ListItem>\n          <ListItem>\n            <Link to=\"reviews\">Reviews</Link>\n          </ListItem>\n        </List>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </AdditionalInfoCard>\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["axios","API_KEY","fetchTrending","response","data","fetchMovieByName","query","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","MovieCard","styled","Title","Overview","Genres","SecondaryTitle","AdditionalInfoCard","List","ListItem","Link","NavLink","movieID","useParams","useState","movie","setMovie","console","log","useEffect","results","movieToSave","title","original_title","src","poster_path","year","release_date","slice","score","Math","round","vote_average","genres","map","genre","name","join","overview","findMovieById","alt","to","Suspense","fallback"],"sourceRoot":""}