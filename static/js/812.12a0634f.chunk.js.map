{"version":3,"file":"static/js/812.12a0634f.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,wCAA2CC,IAD7D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBN,EAAAA,EAAAA,IAAA,kCACMC,EADN,kBACuBK,IAFzC,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBR,EAAAA,EAAAA,IAAA,mBAAsBQ,EAAtB,oBAAoCP,IADtD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACkBR,EAAAA,EAAAA,IAAA,mBAAsBQ,EAAtB,4BAA4CP,IAD9D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,uFACkBR,EAAAA,EAAAA,IAAA,mBAAsBQ,EAAtB,4BAA4CP,IAD9D,cACCE,EADD,yBAEEA,EAASC,MAFX,kE,iGCxBMO,EAAOC,EAAAA,GAAAA,GAAH,uGAOJC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,0H,SCmBtB,EAzBkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,MAAP,OACV,yBACE,SAACN,EAAD,CAAWO,GAAE,kBAAaZ,GAAMa,MAAO,CAAEC,KAAMN,GAA/C,SACGG,KAFIX,EADC,KASjB,C,wIChBYe,E,OAAQX,GAAAA,GAAH,4C,kBC2BlB,EAxBiB,WACf,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,yGACyBxB,EAAAA,EAAAA,MADzB,OACQC,EADR,OAEUwB,EAAYxB,EAAZwB,QACFC,EAAeD,EAAQT,KAAI,SAAAW,GAAM,MAAK,CAC1CrB,GAAIqB,EAAOrB,GACXW,MAAOU,EAAOV,MAFuB,IAIvCM,EAAUG,GAPZ,4CADc,uBAAC,WAAD,wBAUdE,EACD,GAAE,KAGD,iCACE,SAACP,EAAD,6BACmB,IAAlBR,EAAOgB,SAAgB,SAACC,EAAA,EAAD,CAAWjB,OAAQA,MAGhD,C","sources":["API.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '9b8f0c4ec164e6dabb7e1c13a0a2a1d6';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`/3/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-top: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 16px;\n  padding-left: 10px;\n  color: black;\n  &:hover {\n    color: orange;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, MovieLink } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </MovieLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 30px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchTrending } from 'API';\nimport { Title } from './HomePage.styled';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchStartMovies() {\n      const response = await fetchTrending();\n      const { results } = response;\n      const moviesToSave = results.map(result => ({\n        id: result.id,\n        title: result.title,\n      }));\n      setMovies(moviesToSave);\n    }\n    fetchStartMovies();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {movies.length !== 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["axios","API_KEY","fetchTrending","response","data","fetchMovieByName","query","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","List","styled","MovieLink","Link","movies","location","useLocation","map","title","to","state","from","Title","useState","setMovies","useEffect","results","moviesToSave","result","fetchStartMovies","length","MovieList"],"sourceRoot":""}